namespace ProjectEuler.Solutions
{
	using NUnit.Framework;

	/// <summary>
	/// Triangular, pentagonal, and hexagonal.
	/// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
	/// <para>Triangle    Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...</para>
	/// <para>Pentagonal  Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...</para>
	/// <para>Hexagonal   Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...</para>
	/// It can be verified that T285 = P165 = H143 = 40755.
	/// <para>Find the next triangle number that is also pentagonal and hexagonal.</para>
	/// </summary>
	public class Problem045 : Problem
	{
		public override long Solution()
		{
			long number;
			for (int i = 144;; i++)
			{
				long hexagonalNumber = GetHexagonalNumber(i);
				if (Problem044.IsPentagonNumber(hexagonalNumber) && Problem042.IsTriangleNumber(hexagonalNumber))
				{
					number = hexagonalNumber;
					break;
				}
			}

			return number;
		}

		private static long GetHexagonalNumber(int n)
		{
			return n * ((2 * n) - 1);
		}

		[Test]
		public void TestForExample()
		{
			Assert.IsTrue(Problem042.IsTriangleNumber(40755));
			Assert.IsTrue(Problem044.IsPentagonNumber(40755));
			Assert.AreEqual(40755, GetHexagonalNumber(143));
		}

		[Test]
		public void TestForProblem()
		{
			Assert.AreEqual(1533776805, this.Solution());
		}
	}
}