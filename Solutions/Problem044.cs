namespace ProjectEuler.Solutions
{
	using System;
	using System.Collections.Generic;
	using NUnit.Framework;
	using ProjectEuler.Helper;

	/// <summary>
	/// Pentagon numbers.
	/// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
	/// <para>1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...</para>
	/// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
	/// <para>
	/// Find the pair of pentagonal numbers, P<sub>j</sub> and P<sub>k</sub>, 
	/// for which their sum and difference are pentagonal and D = |P<sub>k</sub> − P<sub>j</sub>| is minimised; what is the value of D?
	/// </para>
	/// </summary>
	public class Problem044 : Problem
	{
		public override long Solution()
		{
			HashSet<int> pentagonNumbers = new HashSet<int>();
			for (int i = 1;; i++)
			{
				int pentagonNumber = GetPentagonNumber(i);
				foreach (int number in pentagonNumbers)
				{
					if (pentagonNumbers.Contains(pentagonNumber - number) && Numbers.IsPentagonNumber(pentagonNumber + number))
					{
						return pentagonNumber - number;
					}
				}

				pentagonNumbers.Add(pentagonNumber);
			}
		}

		private static int GetPentagonNumber(int n)
		{
			return n * ((3 * n) - 1) / 2;
		}

		[TestCase(1)]
		[TestCase(5)]
		[TestCase(12)]
		[TestCase(22)]
		[TestCase(35)]
		[TestCase(51)]
		[TestCase(70)]
		[TestCase(92)]
		[TestCase(117)]
		[TestCase(145)]
		public void TestForPentagonNumber(int number)
		{
			Assert.IsTrue(Numbers.IsPentagonNumber(number));
		}

		[Test]
		public void TestForProblem()
		{
			Assert.AreEqual(5482660, this.Solution());
		}
	}
}